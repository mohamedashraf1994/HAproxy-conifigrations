#--------------------------------------------------------------------------------
# Global settings
#--------------------------------------------------------------------------------

global
    # to have these messages end up in /var/log/haproxy.log you will # need to:
    # 1) configure syslog to accept network log events. This is done # by adding the im! option to the SYSLOGD_OPTIONS in # /etc/sysconfig/syslog
    # 2) configure local2 events to go to the /var/log/haproxy.log # file. A line like the Eollowing can be added to # /etc/sysconfig/syslog
    # local2.*            /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix Socket 
    # stats socket /var/lib/haproxy/stats

    stats socket /var/run/haproxy.sock mode 600 level admin 
    stats timeout 2m

    # utilize system-wide crypto-policies 
    # ssl-default-bind-ciphers PROFILE=SYSTEM 
    # ssl-default-server-ciphers PROFILE=SYSTEM
    #Maximum size of temporary DHE keys 
    tune.ssl.default-dh-param 2048

    #LUA script parsing SOAP element loaded 
    lua-load /etc/haproxy/parseElementTwilio.lua 
    lua-load /etc/haproxy/parseElementUnifonic.lua 
    lua-load /etc/haproxy/parseElement360Dialog.lua
    #lua-load /etc/haproxy/parseUserIdBotConnector.lua

#--------------------------------------------------------------------------------
# common defaults that all the 'listenand 'backend' sections will 
# use if not designated in their block
#--------------------------------------------------------------------------------

defaults
    mode                        http
    log                         global
    option                      httplog
    option                      dontlognull
    option  http-server-close
    option  forwardfor          except 127.0.0.0/8 
    option                      redispatch 
    retries                     3
    timeout http-request        10s
    timeout queue               1m
    timeout connect             10s  
    timeout client              30s
    timeout server              1m
    timeout http-keep-alive     10s
    timeout check               10s
    maxconn                     3000
    
#--------------------------------------------------------------------------------
# main frontends which proxys to the backends
#--------------------------------------------------------------------------------

frontend main
    bind *:443 ssl crt /etc/haproxy/certs/chatbot.riyadbank.com.pem 
    option tcplog 
    option http-server-close 
    mode http 

    acl whatsapp-front path_beg /WhatsApp/ 
    use_backend app-whatsapp if whatsapp-front

    acl dialog-front path_beg /DialogWhatsApp/ 
    use_backend app-dialog if dialog-front

    acl Unifonic-front path_beg /Unifonic/ 
    use backend app-unifonic if Unifonic-front 

    acl alkhwarizmi hdr(host) -i alkhwarizmiuat.qcdib.com 
    use backend alkhwarizmi if alkhwarizmi 

    acl orchestrator hdr(host) -i chatbotuat.qcdib.com  
    use backend orchestrator if orchestrator 

    acl middleware hdr(host) -i chatbotuatmw.qcdib.com  
    use backend middleware if middleware 

    acl testbot hdr(host) -i testbotuat.qcdib.com  
    use backend testbot if testbot 

    default_backend app-443

frontend www-http
    bind *:80 
    default_backend app-80

#--------------------------------------------------------------------------------
# Main backends
#--------------------------------------------------------------------------------

backend app-443
    mode http 
    balance leastconn 
    option tcp-check 
    option http-server-close 
    default-server inter 2s fall 2 rise 1 
    stick-table type string len 36 size 1m expire 10m
    stick on cookie (userId) 
    redirect scheme https if !{ ssl_fc}
    server appi 10.34.226.103:443 check ssl verify none
    server app2 10.34.226.104:443 check ssl verify none

backend alkhwarizmi
    mode http
    balance leastconn 
    option httpchk GET / "HTTP/1.0\r\nHost: alkhwarizmiuat.qcdib.com" 
    default-server inter 2s fall 2 rise 1 
    stick-table type string len 36 size im expire 10m 
    stick on cookie (userId) 
    redirect scheme https if !{ ssl_fc }
    server app1 10.34.226.103:443 check ssl verify none
    server app2 10.34.226.104:443 check ssl verify none
  
backend orchestrator
    mode http 
    balance leastconn 
    option httpchk GET /api/system/status "HTTP/1.0\r\nHost: chatbotuat.qcdib.com" 
    http-check expect string success 
    default-server inter 2s fall 2 rise 1 
    stick-table type string len 36 size 1m expire 10m 
    stick on cookie (userId) 
    redirect scheme https if !{ ssl_fc } 
    server appl 10.34.343.208:443 check ssl verify none
    server app2 10.34.343.209:443 check ssl verify none

backend middleware
    mode http 
    balance leastconn 
    option httpchk GET / "HTTP/1.0\r\nHost: chatbotuatmw.qcdib.com " 
    default-server inter 2s fall 2 rise 1 
    redirect scheme https if !{ ssl_fc }  
    server appl 10.34.343.208:443 check ssl verify none
    server app2 10.34.343.209:443 check ssl verify none


backend testbot
    mode http 
    balance leastconn 
    option httpchk GET / "HTTP/1.0\r\nHost: testbotuat.qcdib.com"
    default-server inter 2s fall 2 rise 1 
    stick-table type string len 36 size 1m expire 10m 
    stick on cookie (userId) 
    redirect scheme https if !{ ssl_fc } 
    server app1 10.34.226.103:443 check ssl verify none
    server app2 10.34.226.104:443 check ssl verify none
  

backend app-80
    mode http 
    balance leastconn 
    option tcp-check 
    server app1 10.34.226.103:443 check ssl verify none
    server app2 10.34.226.104:443 check ssl verify none
  
backend app-whatsapp
    mode http 
    balance leastconn
    option  redispatch 
    option httpchk GET /api/system/status "HTTP/1.0\r\nHost: chatbotuat.qcdib.com" 
    http-check expect string success 
    default-server inter 2s fall 2 rise 1
    stick-table type string size 1m expire 10m 
    stick on "lua.parseElementTwilio" 
    redirect scheme https if !{ ssl_fc }  
    server appl 10.34.343.208:443 check ssl verify none
    server app2 10.34.343.209:443 check ssl verify none

backend app-unifonic
    mode http 
    balance leastconn 
    option httpchk GET /api/system/status "HTTP/1.0\r\nHost: chatbotuat.qcdib.com" 
    http-check expect string success 
    default-server inter 2s fall 2 rise 1 
    stick-table type string size 1m expire 10m 
    stick on "lua.parseElementUnifonic" 
    redirect scheme https if !{ ssl_fc } 
    server appl 10.34.343.208:443 check ssl verify none
    server app2 10.34.343.209:443 check ssl verify none


backend app-dialog
    mode http 
    balance leastconn 
    option httpchk GET /api/system/status "HTTP/1.0\r\nHost: chatbotuat.qcdib.com" 
    http-check expect string success 
    default-server inter 2s fall 2 rise 1 
    stick-table type string size 1m expire 10m 
    stick on "lua.parseElement360Dialog" 
    redirect scheme https if !{ ssl_fc } 
    server appl 10.34.343.208:443 check ssl verify none
    server app2 10.34.343.209:443 check ssl verify none
